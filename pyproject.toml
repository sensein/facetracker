[tool.poetry]
name = "facetracker"
version = "0.0.1"
description = "facetracker is a Python package for doing incredible stuff."
authors = [
  "sensein <yibei@mit.edu>"
]
maintainers = [
  "sensein <yibei@mit.edu>"
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/sensein/facetracker"
repository = "https://github.com/sensein/facetracker"
documentation = "https://sensein.github.io/facetracker"
keywords = ["python", "package", "template"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]
packages = [{include = "facetracker"}]

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.7"
numpy = "^1.26.4"
opencv-python = "^4.10.0"
torch = "^2.2.2"
torchvision = "^0.17.2"
facenet-pytorch = "^2.6.0"
scikit-learn = "^1.5.1"
scipy = "^1.14.1"
pandas = "^2.2.2"
matplotlib = "^3.9.2"
pillow = "^10.2.0"
tqdm = "^4.66.5"
scenedetect = "^0.6.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
mypy = "^1.9.0"
pre-commit = "^3.7.0"
pytest-cov = "^5.0.0"
ruff = "^0.3.4"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
pdoc = "^14.4.0"

[tool.poetry.scripts]
facetracker-cli = "facetracker.cli:main"

[tool.pytest.ini_options]
pythonpath = [
  "."
]
testpaths = [
  "tests"
]

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
line-length = 88
indent-width = 4
src = ["."]
target-version = "py310"

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
  "ANN101",  # self should not be annotated.
  "ANN102"  # cls should not be annotated.
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
bump = true
pattern = "default-unprefixed"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
